@using ShipBu.Areas.Admin.Models
@using ShipBu.Data

@model PriceEdit
@{
    ViewData["title"] = "Kayıt Güncelleme";
}
<div class="card">
    <div class="card-body">
        <form method="post" enctype="multipart/form-data">
            <div class="mb-3">
                <label class="form-label" asp-for="CountryId"></label>
                <select class="form-select" asp-for="CountryId" asp-items="@ViewBag.Country">
                </select>
                <span asp-validation-for="CountryId"></span>
            </div>
            @if (Model.StateId != null)
            {
                <div class="mb-3">
                    <label class="form-label" asp-for="StateId"></label>
                    <select class="form-select" asp-for="StateId" asp-items="@ViewBag.State">
                    </select>
                    <span asp-validation-for="StateId"></span>
                </div>
            }
            <div class="mb-3">
                <label class="form-label" asp-for="SendingGenreId"></label>
                <select class="form-select" asp-for="SendingGenreId" asp-items="@ViewBag.SendingGenre">
                </select>
                <span asp-validation-for="SendingGenreId"></span>
            </div>




      
            <div class="mb-3">
                <label class="form-label" asp-for="PrimaryKG"></label>
                <input class="form-control" asp-for="PrimaryKG">
                <span asp-validation-for="PrimaryKG"></span>
            </div>
            <div class="mb-3">
                <label class="form-label" asp-for="SecondaryKg"></label>
                <input class="form-control" asp-for="SecondaryKg">
                <span asp-validation-for="SecondaryKg"></span>
            </div>
            <div class="mb-3">
                <label class="form-label" asp-for="WareHouseId"></label>
                <select class="form-select" asp-for="WareHouseId" asp-items="@ViewBag.WareHouse">
                </select>
                <span asp-validation-for="WareHouseId"></span>
            </div>



            <div class="mb-3">
                <label class="form-label" asp-for="Price"></label>
                <input class="form-control" asp-for="Price">
                <span asp-validation-for="Price"></span>
            </div>


            <hr />
            <button type="submit" class="btn btn-primary">
                Kaydet
            </button>
            <a id="saveButton" class="btn btn-link" asp-action="Index">İptal</a>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.3/angular.min.js" integrity="sha512-KZmyTq3PLx9EZl0RHShHQuXtrvdJ+m35tuOiwlcZfs/rE7NZv29ygNA8SFCkMXTnYZQK2OX0Gm2qKGfvWEtRXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        $(document).ready(function () {
            var boxProductId = sessionStorage.getItem('boxProductId');
            var paletteProductId = sessionStorage.getItem('paletteProductId');
            var containerProductId = sessionStorage.getItem('containerProductId');
            var stateLabel = $("label[for='State']");
            var stateDropdown = $("#State");

            // İlk yükleme sırasında label ve dropdown'ı gizle
            stateLabel.hide();
            stateDropdown.hide();

            // Country dropdown değiştiğinde çalışacak kod
            $("#Country").change(function () {
                var countryId = $(this).val();

                // Ajax çağrısı ile eyaletleri getir
                $.getJSON("/Home/GetStates/", { countryId: countryId }, function (data) {
                    stateDropdown.empty();

                    if (data.length > 0) {
                        // Eyaletler varsa label ve dropdown'ı göster
                        stateLabel.show();
                        stateDropdown.append('<option value="">-- Select State --</option>');
                        $.each(data, function (index, item) {
                            stateDropdown.append('<option value="' + item.id + '">' + item.name + '</option>');
                        });
                        stateDropdown.prop("disabled", false).show();
                    } else {
                        // Eyaletler gelmiyorsa label ve dropdown'ı gizle ve devre dışı bırak
                        stateLabel.hide();
                        stateDropdown.hide().empty().prop("disabled", true);
                    }
                });
            });

        });


        $(document).ready(function () {
            var boxProductId = sessionStorage.getItem('boxProductId');
            var paletteProductId = sessionStorage.getItem('paletteProductId');
            var containerProductId = sessionStorage.getItem('containerProductId');
            var wareLabel = $("label[for='WareHouse']");
            var wareDropdown = $("#WareHouse");

            // İlk yükleme sırasında label ve dropdown'ı gizle
            wareLabel.hide();
            wareDropdown.hide();

            // Country dropdown değiştiğinde çalışacak kod
            $("#Country").change(function () {
                var countryId = $(this).val();

                // Ajax çağrısı ile eyaletleri getir
                $.getJSON("/Home/GetWare/", { countryId: countryId }, function (data) {
                    wareDropdown.empty();

                    if (data.length > 0) {
                        // Eyaletler varsa label ve dropdown'ı göster
                        wareLabel.show();
                        wareDropdown.append('<option value="">-- Select State --</option>');
                        $.each(data, function (index, item) {
                            wareDropdown.append('<option value="' + item.id + '">' + item.name + '</option>');
                        });
                        wareDropdown.prop("disabled", false).show();
                    } else {
                        // Eyaletler gelmiyorsa label ve dropdown'ı gizle ve devre dışı bırak
                        wareLabel.hide();
                        wareDropdown.hide().empty().prop("disabled", true);
                    }
                });
            });

        });
        $(document).ready(function () {
            var boxProductId = sessionStorage.getItem('boxProductId');
            var paletteProductId = sessionStorage.getItem('paletteProductId');
            var containerProductId = sessionStorage.getItem('containerProductId');
            var waresLabel = $("label[for='WareHouse']");
            var waresDropdown = $("#WareHouse");

            // İlk yükleme sırasında label ve dropdown'ı gizle
            waresLabel.hide();
            waresDropdown.hide();

            // Country dropdown değiştiğinde çalışacak kod
            $("#State").change(function () {
                var stateId = $(this).val();


                // Ajax çağrısı ile eyaletleri getir
                $.getJSON("/Home/GetWarehouses/", { stateId: stateId }, function (data) {
                    waresDropdown.empty();

                    if (data.length > 0) {
                        // Eyaletler varsa label ve dropdown'ı göster
                        waresLabel.show();
                        waresDropdown.append('<option value="">-- Select State --</option>');
                        $.each(data, function (index, item) {
                            waresDropdown.append('<option value="' + item.id + '">' + item.name + '</option>');
                        });
                        waresDropdown.prop("disabled", false).show();
                    } else {
                        // Eyaletler gelmiyorsa label ve dropdown'ı gizle ve devre dışı bırak
                        waresLabel.hide();
                        waresDropdown.hide().empty().prop("disabled", true);
                    }
                });
            });

        });



    </script>

}